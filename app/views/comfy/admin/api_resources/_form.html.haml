- action = @api_resource.persisted? ? :put : :post
- path = @api_resource.persisted? ? api_namespace_resource_url : api_namespace_resources_url
- is_edit = @api_resource.persisted? ? true : false
- form_properties = @api_resource.api_namespace&.api_form&.properties&.symbolize_keys
= form_for @api_resource, url: path, method: action, html: {multipart: true, onsubmit: 'return checkRequiredRichTextFields()'} do |f|
  - if @api_resource.errors.any?
    #error_explanation
      %h2= "#{pluralize(@api_resource.errors.count, "error")} prohibited this api_resource from being saved:"
      %ul
        - @api_resource.errors.full_messages.each do |message|
          %li= message
  = render 'comfy/admin/api_namespaces/editor', {api_resource: @api_resource, form_properties: form_properties, is_edit: is_edit}
  .actions
    = f.submit 'Save',  data: {disable_with: false}
= render 'comfy/admin/api_namespaces/init_editor', {read_only: false}

:javascript
  // Disabling file attachment functionality
  addEventListener('trix-initialize', function(e) {
    $('.disable-trix-file-attachment').each(function(e) {
      // Remove file-attach icon
      $(this).find('trix-toolbar .trix-button-group--file-tools').remove();
      // Disables functionality to drag-and-drop files onto the trix-editor
      $(this).find('trix-editor').on('trix-file-accept', function(e) {
        e.preventDefault();
      });
    });
  });

  function checkRequiredRichTextFields() {
    let isRequiredFieldsFilled = true;
    $('form .required-rich-text-error').remove();
    $('trix-editor[required]').each(function() {
      const inputFieldId = $(this).attr('input');
      if (!$(this).parent().find('input#' + inputFieldId).val()) {
        $(this).parent().append(richTextRequiredMessage());
        isRequiredFieldsFilled = false;
      }
    });
    return isRequiredFieldsFilled;
  }

  function richTextRequiredMessage() {
    message = "This is a required field."
    return (`<div class="text-danger required-rich-text-error">${message}</div>`)
  }